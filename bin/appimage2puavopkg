#!/bin/sh

#url=$(cat "$1")
#pkg=$(basename -s .package "$1" )

#inst_dir="./puavo-pkg/"
#inst_dir="."

#header=false


#https://gist.github.com/lukechilds/a83e1d7127b78fef38c2914c4ececc3c
#https://api.github.com/repos/$1/releases/latest


help(){
    echo "Usage: $(basename $0) [options] packagedir"
    echo "    -u, --url <packageurl>"
    echo "    -h, --help"
    echo
    exit 0
}



get_latest_release(){
    uhu=""
    if echo "$1"| grep -q -e "https://github.com/.*/releases/download/.*"; then
	api=$(echo "$1" | sed -E "s@https://github.com/(.*)/releases/download/.*@https://api.github.com/repos/\\1/releases/latest@")
	res=$(curl --silent "$api" | jq -r ".assets[].browser_download_url" 2>/dev/null | xargs)
	if test -n "$res"; then
		for r in $res; do
		    if echo "$r" | grep -q -e ".*x86_64.*AppImage"; then
			uhu="$r"
			break
		    fi
		done
		if test -z "$uhu"; then
		    for r in $res; do
			if echo "$r" | grep -q AppImage; then
			    uhu="$r"
			    break
			fi
		    done
		fi	
	fi
	if test -n "$uhu"; then
	    echo "$uhu"
	else
	    echo "$1"
	fi
    else
	echo "$1"
    fi
}


header(){
    text=$1
    if ! $header; then
	touch changelog
	echo ""                               >> changelog
	echo "Package: $pkg"                  >> changelog
	echo " Status: $text"                 >> changelog
	echo "   Date: $(date)"               >> changelog
	header=true
    fi
}

######################################################

url=""

while [ $# -gt 0 ]; do
    case $1 in
        -h|--help)
            shift
            help
            ;;
         -u|--url)
            shift
            url=$1
            shift
            ;;
        --)
            shift
            break
            ;;
        -*)
            echo "error: invalid argument '$1'"
            exit 1
            ;;
        *)
            break
            ;;
    esac
done

# some paramter checks
#if [ $# -ne 1 ]; then
#    echo 
#    echo "error: invalid number of arguments ($#), expected 1"
#    help
#    exit 1
#fi

inst_dir=$(realpath "$1")

if ! test -d "$inst_dir/upstream_pack_url"; then
    if test -z "$url"; then
	echo "error: $inst_dir/upstream_pack_url does not exist and no url is given"
	exit 1
    fi
else
    if test -z "$url"; then
        url=$(cat "$inst_dir/upstream_pack_url")
    fi
fi

pkg=$(basename $inst_dir)

echo $inst_dir
echo $pkg
echo $url


#exit 

#####################################################

url=$(get_latest_release $url) 


if ! wget -q -O temp.AppImage "$url"; then
    echo "error: could not downalosd $url"
    exit 1
fi
chmod +x temp.AppImage


shasum=$(sha384sum temp.AppImage|cut -d\  -f1)


#if test -z "$pkg"; then
#    pkg=$(grep Name temp.desktop | cut -d= -f2| sed -e "s/ //g"|xargs|cut -d\  -f1)
#    #pkg=$(echo "$pkg" |sed -e "s/ //g") 
#fi

echo ==================$pkg========================

########################################################################################


if test -f "$inst_dir/rules"; then
    create=false
else
    create=true
fi



if "$create"; then
 
    echo "info: initialise package"


    export APPIMAGELAUNCHER_DISABLE=true
    ./temp.AppImage --appimage-extract  >/dev/null 2>&1
    find squashfs-root -maxdepth 1 -name "*.desktop" -exec cp \{\} temp.desktop \;
    find squashfs-root -maxdepth 1 -name "*.png" -exec cp \{\} temp.png \;
    
    mkdir -p "$inst_dir"
    header "New"
    
    touch "$inst_dir/upstream_pack_sha384sum"
    touch "$inst_dir/upstream_pack_url"
    
    echo "Unknown" > "$inst_dir/license"
    grep Name temp.desktop| cut -d= -f2 > "$inst_dir/legend"
    grep Comment temp.desktop | cut -d= -f2 > "$inst_dir/description"

   test -d squashfs-root && rm -rf squashfs-root

    #binary
    if ! test -f "$inst_dir/$pkg.png"; then
	cat <<EOF > temp.sh
#!/bin/sh
export APPIMAGELAUNCHER_DISABLE=true
/opt/$pkg/$pkg.AppImage
EOF
	chmod +x temp.sh
	mv temp.sh "$inst_dir/$pkg"
    fi
    
    #png
    mv temp.png "$inst_dir/$pkg.png"

    # desktop
    sed -i temp.desktop -e "s@Exec=.*@Exec=/usr/local/bin/$pkg@"
    sed -i temp.desktop -e "s@Icon=.*@Icon=/usr/share/pixmaps/$pkg.png@"

    #X-AppImage-Integrate=false

    if grep -q  X-AppImage-Integrate temp.desktop; then
	sed -i temp.desktop -e "s@X-AppImage-Integrate=.*@X-AppImage-Integrate=false@"
    else
	echo "X-AppImage-Integrate=false" >> temp.desktop
    fi


    mv temp.desktop "$inst_dir/$pkg.desktop"

    if ! test -f "$inst_dir/rules"; then
	cat <<'EOF' > rules.temp
#!/bin/sh

set -eu

command=$1
shift

case "$command" in
  configure)
    upstream_dir=$1
    
    ln -fns "$upstream_dir/%%pkg%%" /opt/%%pkg%%
    ln -fns "$upstream_dir/%%pkg%%/%%pkg%%.png" /usr/share/pixmaps/%%pkg%%.png
    ln -fns "$upstream_dir/%%pkg%%/%%pkg%%.desktop" /usr/share/applications/%%pkg%%.desktop
    ln -fns "$upstream_dir/%%pkg%%/%%pkg%%" /usr/local/bin//%%pkg%%

    ;;
  unconfigure)

    rm -f /opt/%%pkg%%
    rm -f /usr/share/pixmaps/%%pkg%%.png
    rm -f /usr/share/applications/%%pkg%%.desktop
    rm -f /usr/local/bin//%%pkg%%

    ;;
  unpack)
    upstream_pack=$1
    upstream_dir=$2

    mkdir -p "$upstream_dir/%%pkg%%"
    cp  "$upstream_pack" "${upstream_dir}/%%pkg%%/%%pkg%%.AppImage"
    chmod 755 "${upstream_dir}/%%pkg%%/%%pkg%%.AppImage"
    cp  %%pkg%%.png "$upstream_dir/%%pkg%%/%%pkg%%.png"
    cp  %%pkg%%.desktop "$upstream_dir/%%pkg%%/%%pkg%%.desktop"
    cp  %%pkg%% "$upstream_dir/%%pkg%%/%%pkg%%"
    ;;
  *)
    ;;
esac
EOF

	sed -i rules.temp -e "s/%%pkg%%/$pkg/g"
	chmod +x rules.temp
	mv rules.temp "$inst_dir/rules"
    fi
fi

test -f temp.AppImage && rm temp.AppImage

touch "$inst_dir/upstream_pack_url"
old_url=$(cat "$inst_dir/upstream_pack_url")
if ! test "$url" = "$old_url"; then
   header "Update"
   echo  "    URL: $url" >> changelog
   echo "info: updating upstream_pack_url"
   echo "$url" > "$inst_dir/upstream_pack_url"
fi

touch "$inst_dir/upstream_pack_sha384sum"
old_shasum=$(cat "$inst_dir/upstream_pack_sha384sum")
if ! test "$shasum" = "$old_shasum"; then
   header "Update"
   echo  " shasum: $shasum" >> changelog
   echo "info: updating upstream_pack_sha384sum"
   echo "$shasum" > "$inst_dir/upstream_pack_sha384sum"
fi


exit 0
    
    
